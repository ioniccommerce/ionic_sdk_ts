/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type Link = {
    text: string;
    type: string;
    url: string;
};

/** @internal */
export namespace Link$ {
    export type Inbound = {
        text: string;
        type: string;
        url: string;
    };

    export const inboundSchema: z.ZodType<Link, z.ZodTypeDef, Inbound> = z
        .object({
            text: z.string(),
            type: z.string(),
            url: z.string(),
        })
        .transform((v) => {
            return {
                text: v.text,
                type: v.type,
                url: v.url,
            };
        });

    export type Outbound = {
        text: string;
        type: string;
        url: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Link> = z
        .object({
            text: z.string(),
            type: z.string(),
            url: z.string(),
        })
        .transform((v) => {
            return {
                text: v.text,
                type: v.type,
                url: v.url,
            };
        });
}
