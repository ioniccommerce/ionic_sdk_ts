/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { AmountWithCurrency, AmountWithCurrency$ } from "./amountwithcurrency.js";
import { ProductIdentifiers, ProductIdentifiers$ } from "./productidentifiers.js";
import * as z from "zod";

export type ProductDetails = {
    identifiers: ProductIdentifiers;
    imageUrl?: string | undefined;
    link: string;
    price?: AmountWithCurrency | undefined;
    referenceId?: string | undefined;
    title?: string | undefined;
};

/** @internal */
export namespace ProductDetails$ {
    export const inboundSchema: z.ZodType<ProductDetails, z.ZodTypeDef, unknown> = z
        .object({
            identifiers: ProductIdentifiers$.inboundSchema,
            image_url: z.string().optional(),
            link: z.string(),
            price: AmountWithCurrency$.inboundSchema.optional(),
            reference_id: z.string().optional(),
            title: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                image_url: "imageUrl",
                reference_id: "referenceId",
            });
        });

    export type Outbound = {
        identifiers: ProductIdentifiers$.Outbound;
        image_url?: string | undefined;
        link: string;
        price?: AmountWithCurrency$.Outbound | undefined;
        reference_id?: string | undefined;
        title?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ProductDetails> = z
        .object({
            identifiers: ProductIdentifiers$.outboundSchema,
            imageUrl: z.string().optional(),
            link: z.string(),
            price: AmountWithCurrency$.outboundSchema.optional(),
            referenceId: z.string().optional(),
            title: z.string().optional(),
        })
        .transform((v) => {
            return remap$(v, {
                imageUrl: "image_url",
                referenceId: "reference_id",
            });
        });
}
