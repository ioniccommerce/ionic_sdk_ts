/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../../models/components";
import { z } from "zod";

export type QuerySecurity = {
    apiKeyHeader?: string | undefined;
    apiKeyQuery?: string | undefined;
};

export type QueryResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Successful Response
     */
    queryAPIResponse?: components.QueryAPIResponse | undefined;
};

/** @internal */
export namespace QueryResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        QueryAPIResponse?: components.QueryAPIResponse$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<QueryResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            QueryAPIResponse: components.QueryAPIResponse$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.QueryAPIResponse === undefined
                    ? null
                    : { queryAPIResponse: v.QueryAPIResponse }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        QueryAPIResponse?: components.QueryAPIResponse$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, QueryResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            queryAPIResponse: components.QueryAPIResponse$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.queryAPIResponse === undefined
                    ? null
                    : { QueryAPIResponse: v.queryAPIResponse }),
            };
        });
}
